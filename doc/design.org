#+TITLE: Design Document
#+AUTHOR: Cherry

* Authentification Methods
#+BEGIN_SRC mermaid :file authDiagram.svg
  classDiagram
      class AuthMethod {
          <<interface>>
          +token: string
          `==`(AuthMethod otherAuth)   
      }
      class UserPassAuth {
          -string password
          -string salt   
      }   
#+END_SRC

#+RESULTS:
[[file:authDiagram.svg]]

With something that's laid out like this, perhaps it can be formatted like so?

#+BEGIN_SRC nim
  type
    AuthMethod = ref object
      token: string
    UserPassAuth = ref object of AuthMethod
      hashedPassword: string
      salt: string

  proc `==`(a: AuthMethod, b: AuthMethod)
    
  # UserPassAuth
  proc hashPassword(password: string, salt: string, comparingTo = ""): string =
    let bcryptSalt = if comparingTo != "": comparingTo else: genSalt(8)
    hash(getMD5(salt & getMD5(password)), bcryptSalt)

  proc generateToken*(self: UserPassAuth): string =
  
#+END_SRC

* Users
#+BEGIN_SRC mermaid :file userDiagram.svg
  classDiagram
      class User {
          +int64 id
          +AuthMethod auth   
          +string salt   
          +bool super
          +verifyPassword(string password)		
      }
#+END_SRC

#+RESULTS:
[[file:userDiagram.svg]]
